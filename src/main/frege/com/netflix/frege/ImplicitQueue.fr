module com.netflix.frege.ImplicitQueue where

import frege.Prelude hiding (head,tail)
import com.netflix.frege.Queue

data Digit a = Zero | One a | Two a a
data ImplicitQueue a =
       Shallow (Digit a)
     | Deep (Digit a) (ImplicitQueue (a,a)) (Digit a)

instance Queue ImplicitQueue where
  empty = Shallow Zero

  null (Shallow Zero) = true
  null _ = false

  snoc (Shallow Zero) y = Shallow (One y)
  snoc (Shallow (One x)) y = Deep (Two x y) empty Zero
  snoc (Deep f m Zero) y = Deep f m (One y)
  snoc (Deep f m (One x)) y = Deep f (snoc m (x,y)) Zero

  head (Shallow Zero) = error "ImplicitQueue.head: empty queue"
  head (Shallow (One x)) = x
  head (Deep (One x) m r) = x
  head (Deep (Two x y) m r) = x

  tail (Shallow Zero) = error "ImplicitQueue.tail: empty queue"
  tail (Shallow (One x)) = empty
  tail (Deep (Two x y) m r) = Deep (One y) m r
  tail (Deep (One x) m r) =
      if null m then Shallow r else Deep (Two y z) (tail m) r
    where (y,z) = head m
